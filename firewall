#!/bin/bash

# IPTables
IPTABLES=/sbin/iptables

# Chain Rule
INPUT=input
OUTPUT=output
FORWARD=forward

# Lists
ALLOW_LIST=allow.list
BLOCK_LIST=block.list

# Flush
$IPTABLES -F
$IPTABLES -X
$IPTABLES -Z
$IPTABLES -t nat -F

# Default Policy (Accept All)
$IPTABLES -P $INPUT		ACCEPT
$IPTABLES -P $OUTPUT		ACCEPT
$IPTABLES -P $FORWARD	ACCEPT

# Allow Established Connections
$IPTABLES -A $INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT

# SYN Packets
$IPTABLES -A $INPUT -p tcp ! --syn -m state --state NEW -j DROP

# Fragmented Packets
$IPTABLES -A $INPUT -f -j DROP

# XMAS Packets
$IPTABLES -A $INPUT -p tcp --tcp-flags ALL ALL -j DROP

# NULL Packets
$IPTABLES -A $INPUT -p tcp --tcp-flags ALL NONE -j DROP

# ICMP Requests
$IPTABLES -A $INPUT -p ICMP --icmp-type echo-request -j ACCEPT


#
# Allowed Addresses
#
$IPTABLES -A $INPUT -i lo -j ACCEPT

# List
if [ -f $ALLOW_LIST ]; then
	for ADDRESS in `cat $ALLOW_LIST`; do iptables -A INPUT -s $ADDRESS -j ACCEPT; done
fi


#
# Blocked Addresses
#

# We look for addresses in the ssh log -> "lastb"
lastb | awk {'print $3'} | grep -oE "\b([0-9]{1,3}\.){3}[0-9]{1,3}\b" | sort | uniq | awk {'print "iptables -A INPUT -s " $1 " -j DROP"'} | bash

# List
if [ -f $BLOCK_LIST ]; then
	for ADDRESS in `cat $BLOCK_LIST`; do iptables -A INPUT -s $ADDRESS -j ACCEPT; done
fi
